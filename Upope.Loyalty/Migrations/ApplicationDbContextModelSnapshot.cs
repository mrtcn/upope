// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Upope.Loyalty;

namespace Upope.Loyalty.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Upope.Loyalty.Data.Entities.Loyalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Credit");

                    b.Property<int>("CurrentWinStreak");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<int>("Score");

                    b.Property<int>("Status");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.Property<int>("WinRecord");

                    b.HasKey("Id");

                    b.ToTable("Loyalty");
                });

            modelBuilder.Entity("Upope.Loyalty.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Gender");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Nickname")
                        .HasMaxLength(250);

                    b.Property<string>("PictureUrl");

                    b.Property<int>("Status");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Upope.Loyalty.Data.Entities.User", b =>
                {
                    b.HasOne("Upope.Loyalty.Data.Entities.Loyalty", "Loyalty")
                        .WithOne("User")
                        .HasForeignKey("Upope.Loyalty.Data.Entities.User", "UserId")
                        .HasPrincipalKey("Upope.Loyalty.Data.Entities.Loyalty", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
